<ui:composition  xmlns="http://www.w3.org/1999/xhtml"
                 xmlns:h="http://java.sun.com/jsf/html"
                 xmlns:f="http://java.sun.com/jsf/core"
                 xmlns:ui="http://java.sun.com/jsf/facelets"
                 xmlns:p="http://primefaces.org/ui"
                 xmlns:sf="http://faces.santfeliu.org"
                 xmlns:t="http://myfaces.apache.org/tomahawk"
                 template="/pf/topframe/topframe.xhtml">

  <ui:param name="css" value="/common/cms/css/cms.css" />    
  <ui:define name="page">
    <p:growl id="growl" />
    <p:messages id="msgs" showDetail="true" closable="true" severity="error">
      <p:autoUpdate />
    </p:messages>
    <f:loadBundle basename="org.santfeliu.cms.web.resources.CMSBundle" var="cmsBundle" />

    <t:saveState value="#{nodeEditBacking}" />
    <t:saveState value="#{cmsToolbarBean}" />

    <t:inputHidden id="tScroll"/>
    <t:inputHidden id="pScroll"/>
    <t:inputHidden id="sScroll"/>

    <h:panelGroup styleClass="cmsCurrentPathPanel">
      <h:panelGroup styleClass="currentPath">
        <t:dataList id="navPath" var="item"
                    value="#{userSessionBean.menuModel.selectedMenuItem.cursorPath}">
          <h:commandLink
            action="#{nodeEditBacking.selectMenuItem}" styleClass="itemPath">
            <sf:outputText value="#{nodeEditBacking.menuItemLabel}" />
          </h:commandLink>
        </t:dataList>
      </h:panelGroup>

      <h:messages rendered="#{userSessionBean.facesMessagesQueued}" 
                  showSummary="true"
                  infoClass="infoMessage"
                  warnClass="warnMessage"
                  errorClass="errorMessage"
                  fatalClass="fatalMessage" />

    </h:panelGroup>

    <h:panelGroup styleClass="cmsEditPanel">

      <h:panelGroup styleClass="nodeTree">

        <h:panelGroup styleClass="nodeSearch">
          <h:outputLabel value="#{cmsBundle.search}:" styleClass="nodeSearchLabel" />
          <t:inputText value="#{nodeEditBacking.inputSearch}" styleClass="nodeSearchValue"
                       onkeypress="inputTextKeyCheck(event, 'mainform:nodeSearchButton');"/>
          <h:commandButton id="nodeSearchButton"
                           action="#{nodeEditBacking.fastSearch}"
                           style="display:none;" />
        </h:panelGroup>

        <h:panelGroup styleClass="subtoolbar">
          <h:commandLink action="#{nodeEditBacking.appendNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.appendNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.appendNode}" url="/common/cms/images/add.png" title="#{cmsBundle.appendNode}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.insertBeforeNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.insertBeforeNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.insertBeforeNode}" url="/common/cms/images/insbefore.png" title="#{cmsBundle.insertBeforeNode}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.insertAfterNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.insertAfterNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.insertAfterNode}" url="/common/cms/images/insafter.png" title="#{cmsBundle.insertAfterNode}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.moveNodeUp}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.moveNodeUpEnabled}">
            <t:graphicImage alt="#{cmsBundle.moveUp}" url="/common/cms/images/move_up.png" title="#{cmsBundle.moveUp}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.moveNodeDown}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.moveNodeDownEnabled}">
            <t:graphicImage alt="#{cmsBundle.moveDown}" url="/common/cms/images/move_down.png" title="#{cmsBundle.moveDown}" />
          </h:commandLink>
          <t:commandLink action="#{nodeEditBacking.removeNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.removeNodeEnabled}" onclick="if (!confirm('#{cmsBundle.confirmRemove} #{nodeEditBacking.selectedNodeId}?'))
                               return false;">
            <t:graphicImage alt="#{cmsBundle.removeNode}" url="/common/cms/images/remove.png" title="#{cmsBundle.removeNode}" />
          </t:commandLink>
          <h:commandLink action="#{nodeEditBacking.cutNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.cutNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.cutNode}" url="/common/cms/images/cut.png" title="#{cmsBundle.cutNode}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.copyNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.copyNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.copyNode}" url="/common/cms/images/copy.png" title="#{cmsBundle.copyNode}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.copySingleNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.copyNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.copySingleNode}" url="/common/cms/images/copysingle.png" title="#{cmsBundle.copySingleNode}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.pasteAsRootNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.pasteAsRootNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.pasteAsRootNode}" url="/common/cms/images/asroot.png" title="#{cmsBundle.pasteAsRootNode}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.pasteInsideNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.pasteInsideNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.pasteInsideNode}" url="/common/cms/images/inside.png" title="#{cmsBundle.pasteInsideNode}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.pasteBeforeNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.pasteBeforeNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.pasteBeforeNode}" url="/common/cms/images/before.png" title="#{cmsBundle.pasteBeforeNode}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.pasteAfterNode}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.pasteAfterNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.pasteAfterNode}" url="/common/cms/images/after.png" title="#{cmsBundle.pasteAfterNode}" />
          </h:commandLink>
        </h:panelGroup>
        <div id="treeLayer" style="overflow:auto;width:100%;">
          <h:panelGroup styleClass="rootSelection">
            <h:outputText value="#{nodeEditBacking.rootNodeId}" styleClass="#{nodeEditBacking.rootBoxStyleClass}" />
            <h:commandLink value="#{nodeEditBacking.rootLabel}"
                           action="#{nodeEditBacking.selectRootMenuItem}"
                           style="#{nodeEditBacking.rootSelected ? 'font-weight:bold' : null}"
                           styleClass="#{nodeEditBacking.rootStyleClass}" />
            <t:graphicImage alt="CSS" url="/common/cms/images/css.png" title="CSS" styleClass="css"
                            rendered="#{nodeEditBacking.customRootCSS}" />
            <h:commandButton action="#{nodeEditBacking.showRootSelection}"
                             value="#{cmsBundle.changeRoot}" styleClass="button" />
            <h:commandLink action="#{nodeEditBacking.collapseAllNodes}" styleClass="collapseAllLink">
              <h:outputText value="[#{cmsBundle.collapseAll}]" styleClass="collapseAllLabel"/>
            </h:commandLink>          
          </h:panelGroup>

          <sf:treeMenu id="tree" styleClass="tree" var="item" baseMid="#{nodeEditBacking.rootNodeId}"
                       expandedMenuItems="#{nodeEditBacking.expandedMenuItems}"
                       expandImageUrl="/images/expand.gif"
                       collapseImageUrl="/images/collapse.gif">
            <f:facet name="data">
              <h:panelGroup styleClass="menuItem">
                <h:outputText value="#{nodeEditBacking.menuItemBoxText}"
                              styleClass="#{nodeEditBacking.menuItemBoxStyleClass}" />
                <h:commandLink value="#{nodeEditBacking.menuItemLabel}"
                               action="#{nodeEditBacking.selectMenuItem}"
                               style="#{nodeEditBacking.menuItemSelected ? 'font-weight:bold' : null}"
                               styleClass="#{nodeEditBacking.menuItemStyleClass}" />
                <t:graphicImage alt="CSS" url="/common/cms/images/css.png" title="CSS" styleClass="css"
                                rendered="#{nodeEditBacking.customCSS}" />
              </h:panelGroup>
            </f:facet>
          </sf:treeMenu>
        </div>

      </h:panelGroup>

      <div id="cmsEditSeparator" styleClass="separator" />



      <h:panelGroup styleClass="nodeProperties" rendered="#{userSessionBean.editViewSelected}">

        <h:panelGrid columns="2">

          <h:outputText value="Mode d'ediciÃÂ³: "  />
          <p:selectOneRadio id="editor_mode_select" 
                           value="#{nodeEditBacking.editorMode}">
            <f:selectItem itemLabel="Editor de propietats" itemValue="props" />      
            <f:selectItem itemLabel="Editor amb formularis" itemValue="object" />      
            <p:ajax process="@this" update="editor_mode_include" listener="#{nodeEditBacking.onObjectChange}" />                
          </p:selectOneRadio>     

        </h:panelGrid>        

        <h:panelGroup id="editor_mode_include">
          <ui:include  src='mode/#{nodeEditBacking.editorMode}_mode.xhtml' />
        </h:panelGroup>

      </h:panelGroup>

      <h:panelGroup styleClass="nodeCSS" rendered="#{userSessionBean.cssViewSelected}">
        <h:panelGroup styleClass="subtoolbar">
          <h:commandLink action="#{nodeEditBacking.saveCSS}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.appendNodeEnabled}">
            <t:graphicImage alt="#{cmsBundle.saveCSS}" url="/common/cms/images/save.png" title="#{cmsBundle.saveCSS}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.revertCSS}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.appendNodeEnabled and nodeEditBacking.customCSS}">
            <t:graphicImage alt="#{cmsBundle.revert}" url="/common/cms/images/revert.png" title="#{cmsBundle.revert}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.syncCSS}" styleClass="imageButton"
                         rendered="#{nodeEditBacking.syncCssButtonRender}">
            <t:graphicImage alt="#{cmsBundle.sync}" url="/common/cms/images/sync_css.png" title="#{cmsBundle.sync}" />
          </h:commandLink>
          <h:outputLabel styleClass="noCSSLabel" rendered="#{not nodeEditBacking.customCSS}" value="#{cmsBundle.noCustomCSS}" />
        </h:panelGroup>
        <div id="cssLayer">
          <h:inputTextarea id="cssTextArea" value="#{nodeEditBacking.cssText}" styleClass="textArea" />
        </div>
      </h:panelGroup>

      <h:panelGroup styleClass="nodeSync" rendered="#{userSessionBean.syncViewSelected}">
        <div styleClass="cmsSyncSelection" rendered="#{nodeEditBacking.syncNodeEnabled}">
          <h:panelGroup styleClass="subtoolbar">
            <h:commandLink action="#{nodeEditBacking.syncNode}"
                           styleClass="imageButton">
              <t:graphicImage alt="#{cmsBundle.ok}" url="/common/cms/images/ok.png" title="#{cmsBundle.ok}" />
            </h:commandLink>
          </h:panelGroup>
          <div id="syncLayer" style="overflow:auto;">
            <h:panelGroup>
              <h:outputText value="#{cmsBundle.syncTo}:" />
              <sf:commandMenu action="#{nodeEditBacking.switchToWorkspace}" 
                              value="#{nodeEditBacking.toWorkspaceIdInput}"
                              style="margin-left:2px;">
                <f:selectItems value="#{nodeEditBacking.toWorkspaceItems}" />
              </sf:commandMenu>
            </h:panelGroup>
            <h:outputText value="#{cmsBundle.noNodesToSync}"
                          rendered="#{nodeEditBacking.syncNodeChangeListEmpty}"
                          styleClass="noNodesLabel" />
            <h:dataTable value="#{nodeEditBacking.syncNodeChangeList}" var="nodeChangeRow"
                         columnClasses="col1,col2,col3,col4" styleClass="syncNodeTable"
                         headerClass="header" rendered="#{!nodeEditBacking.syncNodeChangeListEmpty}">
              <f:facet name="header">
                <h:panelGrid columns="2">
                  <h:outputText value="#{cmsBundle.nodesToSync}" styleClass="title" />
                  <h:commandLink action="#{nodeEditBacking.checkAllSyncNodes}" styleClass="checkAllLink">
                    <h:outputText value="[#{cmsBundle.checkAll}]" styleClass="checkAllLabel"/>
                  </h:commandLink>
                </h:panelGrid>
              </f:facet>
              <h:column>
                <h:selectBooleanCheckbox value="#{nodeChangeRow.checked}" />
              </h:column>
              <h:column>
                <h:outputText value="#{nodeChangeRow.nodeId}" styleClass="nodeId" />
              </h:column>
              <h:column>
                <h:outputText value="#{nodeChangeRow.type}" styleClass="nodeChangeType" />
              </h:column>
              <h:column>
                <h:outputText value="#{nodeEditBacking.nodeChangeRowLabel}" styleClass="nodeLabel" />
              </h:column>
            </h:dataTable>
          </div>
        </div>
        <h:outputLabel styleClass="noWorkspacesLabel"
                       rendered="#{!nodeEditBacking.syncNodeEnabled}"
                       value="#{cmsBundle.noWorkspacesToSync}" />
      </h:panelGroup>

      <h:panelGroup styleClass="nodeSearchPanel" style="height:auto" rendered="#{userSessionBean.searchViewSelected}">

        <h:panelGroup styleClass="subtoolbar">
          <h:commandLink action="#{nodeEditBacking.addSearchProperty}" styleClass="imageButton">
            <t:graphicImage alt="#{cmsBundle.addSearchProperty}" url="/common/cms/images/add.png" title="#{cmsBundle.addSearchProperty}" />
          </h:commandLink>
          <h:commandLink action="#{nodeEditBacking.resetSearch}" styleClass="imageButton">
            <t:graphicImage alt="#{cmsBundle.resetSearch}" url="/common/cms/images/revert.png" title="#{cmsBundle.resetSearch}" />
          </h:commandLink>
        </h:panelGroup>

        <div id="searchLayer" rendered="#{!nodeEditBacking.searchPropertyListEmpty}">

          <t:dataTable rowIndexVar="propertyRowIndex" styleClass="propertyTable"
                       columnClasses="col1,col2,col3,col4"
                       value="#{nodeEditBacking.searchPropertyList}"
                       var="property">
            <h:column>
              <h:inputText value="#{property.name}" styleClass="propertyName"
                           onkeypress="inputTextKeyCheck(event, 'mainform:nodeSearchButton2');" />            
              <h:outputText rendered="#{nodeEditBacking.andLabelRender}" value="#{cmsBundle.andUpper}" />
            </h:column>
            <h:column>
              <t:dataList rowIndexVar="valueRowIndex"
                          value="#{nodeEditBacking.propertyValues}" var="propertyValue">
                <h:inputText value="#{propertyValue.value}" styleClass="propertyValue"
                             onkeypress="inputTextKeyCheck(event, 'mainform:nodeSearchButton2');" />
                <h:outputText rendered="#{nodeEditBacking.orLabelRender}" value="#{cmsBundle.orUpper}"/>
              </t:dataList>
            </h:column>
            <h:column>
              <h:commandLink action="#{nodeEditBacking.addPropertyValue}" styleClass="imageButton">
                <t:graphicImage alt="#{cmsBundle.addPropertyValue}" url="/common/cms/images/add_mini.png" title="#{cmsBundle.addPropertyValue}" />
              </h:commandLink>
            </h:column>
            <h:column>
              <h:commandLink action="#{nodeEditBacking.removeSearchProperty}" styleClass="imageButton">
                <t:graphicImage alt="#{cmsBundle.removeProperty}" url="/common/cms/images/close_mini.png" title="#{cmsBundle.removeProperty}" />
              </h:commandLink>
            </h:column>
          </t:dataTable>

        </div>

        <h:commandButton id="nodeSearchButton2" value="#{cmsBundle.search}" action="#{nodeEditBacking.fullSearch}" />

        <div styleClass="searchCountLayer">
          <h:outputText value="#{cmsBundle.foundNodes}: #{nodeEditBacking.searchCount}"
                        rendered="#{nodeEditBacking.searchDone}"
                        styleClass="searchCountText" />
        </div>

        <div id="searchNodeList" styleClass="nodeList">
          <t:dataList value="#{nodeEditBacking.nodeSearchItemList}" var="nodeSearchItem">
            <div styleClass="item">
              <div styleClass="nodeId">
                <h:commandLink action="#{nodeEditBacking.selectMenuItem}">
                  <h:outputText value="#{nodeSearchItem.nodeId}" />
                </h:commandLink>              
              </div>
              <div styleClass="label">
                <h:outputText value="#{nodeSearchItem.label}" />
              </div>
              <div styleClass="path">
                <h:outputText value="#{nodeSearchItem.nodeIdPathString}" />                
              </div>  
            </div>
          </t:dataList>
        </div>

      </h:panelGroup>

    </h:panelGroup>
    <script type="text/javascript">
/*
      var viewportwidth;
      var viewportheight;

      if (typeof window.innerWidth != 'undefined')
      {
        viewportwidth = window.innerWidth;
        viewportheight = window.innerHeight;
      }
      else if (
              (typeof document.documentElement != 'undefined') &amp;&amp;
              (typeof document.documentElement.clientWidth != 'undefined') &amp;&amp;
      (document.documentElement.clientWidth != 0)
              )
      {
      viewportwidth = document.documentElement.clientWidth;
              viewportheight = document.documentElement.clientHeight;
      }
      else // older versions of IE
      {
        viewportwidth = document.body.clientWidth;
        viewportheight = document.body.clientHeight;
      }

      var msgHeight = 25;
      try
      {
        msgHeight = document.getElementsByClassName('cmsCurrentPathPanel')
        [0].offsetHeight;
      } catch (err)
      {

      }

     document.getElementById('mainform:cmsEditSeparator').style.height =
              (viewportheight - 55 - msgHeight) + 'px'; 
      document.getElementById('mainform:treeLayer').style.height =
              (viewportheight - 125 - msgHeight) + 'px';
      try
      {
        document.getElementById('mainform:propertiesLayer').style.height =
                (viewportheight - 95 - msgHeight) + 'px';
      } catch (err)
      {

      }
      try
      {
        document.getElementById('mainform:cssTextArea').style.height =
                (viewportheight - 100 - msgHeight) + 'px';
      } catch (err)
      {

      }
      try
      {
        document.getElementById('mainform:syncLayer').style.height =
                (viewportheight - 95 - msgHeight) + 'px';
      } catch (err)
      {

      }
      try
      {
        document.getElementsByClassName('nodeSearchPanel')[0].style.
                height = (viewportheight - 55 - msgHeight) + 'px';
      } catch (err)
      {

      }

      function treeScroll()
      {
        document.getElementById('mainform:tScroll').value =
                document.getElementById('mainform:treeLayer').scrollTop;
      }

      function propertiesScroll()
      {
        document.getElementById('mainform:pScroll').value =
                document.getElementById('mainform:propertiesLayer').scrollTop;
      }

      function syncScroll()
      {
        document.getElementById('mainform:sScroll').value =
                document.getElementById('mainform:syncLayer').scrollTop;
      }

      function treeScrollMove()
      {
        var vTreeScroll = document.getElementById('mainform:tScroll');
        if (!vTreeScroll.value)
          vTreeScroll.value = 0;
        document.getElementById('mainform:treeLayer').scrollTop = vTreeScroll.value;
      }

      function propertiesScrollMove()
      {
        var vPropScroll = document.getElementById('mainform:pScroll');
        if (!vPropScroll.value)
          vPropScroll.value = 0;
        document.getElementById('mainform:propertiesLayer').scrollTop = vPropScroll.value;
      }

      function syncScrollMove()
      {
        var vSyncScroll = document.getElementById('mainform:sScroll');
        if (!vSyncScroll.value)
          vSyncScroll.value = 0;
        document.getElementById('mainform:syncLayer').scrollTop = vSyncScroll.value;
      }

      document.getElementById('mainform:treeLayer').onscroll = treeScroll;
      treeScrollMove();
      try
      {
        document.getElementById('mainform:propertiesLayer').onscroll = propertiesScroll;
        propertiesScrollMove();
      } catch (err)
      {

      }
      try
      {
        document.getElementById('mainform:syncLayer').onscroll = syncScroll;
        syncScrollMove();
      } catch (err)
      {

      }
*/
    </script>

  </ui:define>
</ui:composition>


