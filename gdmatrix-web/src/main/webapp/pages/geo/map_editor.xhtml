<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:gdm="http://gdmatrix.org/faces"
                xmlns:pe="http://primefaces.org/ui/extensions"
                xmlns:sf="http://faces.santfeliu.org">
  
  <h:outputStylesheet library="css" name="geo.css" />
  <h:outputScript library="gdmatrixfaces" name="maplibre/ogc.js" />
  <h:outputScript library="gdmatrixfaces" name="maplibre/codemirror-completion.js" />

  <div class="flex flex-column h-full">
    <div id="map_toolbar" class="p-2 flex flex-grow-0 align-items-center border-none border-solid border-bottom-1"
         style="border-color:var(--surface-border)">
      <div class="flex-grow-0 text-left align-items-center" style="color:var(--text-color)">
        <span class="pi pi-map"/>
        <strong>#{geoMapBean.mapDocument.title}</strong>
        <h:outputText value="(#{geoMapBean.mapDocument.name})" styleClass="ml-2 code"
                      rendered="#{geoMapBean.mapDocument.name != null}" />
      </div>
      <div class="buttons flex flex-grow-1 justify-content-end gap-2">
        <div class="ui-inputgroup">
          <p:commandButton action="#{geoMapBean.setView('catalogue')}" value="#{geoBundle.catalogue_short}"
                           icon="pi pi-th-large" title="#{geoBundle.catalogue}" styleClass="mini"
                           widgetVar="showCatalogueButton"
                           rendered="#{geoMapBean.catalogueEnabled}"
                           process="@form:cnt" update="@form:cnt" />

          <p:commandButton action="#{geoMapBean.setView('map_viewer')}" value="#{objectBundle.show}"
                           icon="pi pi-eye" title="#{objectBundle.show}" styleClass="mini"
                           process="@form:cnt" update="@form:cnt"
                           oncomplete="if (isFacesError()) objectScrollUp()" />

          <p:commandButton action="#{geoMapBean.setViewAndMode('sld_editor', 'visual')}" value="SLD"
                           icon="pi pi-palette" title="SLD" styleClass="mini"
                           process="@form:cnt" update="@form:cnt"
                           oncomplete="if (isFacesError()) objectScrollUp()" />
        </div>

        <div class="ui-inputgroup">
          <p:commandButton action="#{geoMapBean.setMode('visual')}" value="#{geoBundle.visual}"
                           icon="pi pi-credit-card" title="#{geoBundle.visual}"
                           styleClass="mini #{geoMapBean.mode == 'visual' ? 'ui-button-outlined' : ''}"
                           process="@form:cnt" update="@form:cnt" />

          <p:commandButton action="#{geoMapBean.setMode('code')}" value="#{geoBundle.code}"
                           icon="pi pi-code" title="#{geoBundle.code}"
                           process="@form:cnt" update="@form:cnt"
                           styleClass="mini #{geoMapBean.mode == 'code' ? 'ui-button-outlined' : ''}"
                           oncomplete="if (isFacesError()) objectScrollUp()" />
        </div>

        <div class="ui-inputgroup">
          <p:commandButton action="#{geoMapBean.newMap}" value="#{objectBundle.create}"
                           icon="pi pi-plus-circle" title="#{objectBundle.create}" styleClass="mini"
                           resetValues="true"
                           process="@this" update="@form:cnt" />

          <p:commandButton action="#{geoMapImportBean.setDialogVisible(true)}"
                           value="#{objectBundle.import}"
                           resetValues="true"
                           icon="pi pi-download" title="#{objectBundle.import}" styleClass="mini"
                           process="@this" update="@form:cnt:map_import_dialog"
                           oncomplete="PF('mapImportDialog').show()" />          
          
          <p:commandButton action="#{geoMapBean.reloadMap}" value="#{objectBundle.reload}"
                           icon="pi pi-refresh" title="#{objectBundle.reload}" styleClass="mini"
                           resetValues="true"
                           process="@this" update="@form:cnt"
                           oncomplete="if (isFacesError()) objectScrollUp()" />

          <p:commandButton action="#{geoMapBean.saveMap}" value="#{objectBundle.store}"
                           icon="pi pi-save" title="#{objectBundle.store}" styleClass="mini"
                           process="@form:cnt" update="@form:cnt"
                           oncomplete="if (isFacesError()) objectScrollUp()" />
          
          <p:commandButton action="#{geoMapBean.removeMap}" value="#{objectBundle.delete}"
                           icon="pi pi-trash" title="#{objectBundle.delete}" styleClass="mini"
                           process="@form:cnt" update="@form:cnt"
                           oncomplete="if (isFacesError()) objectScrollUp()">
                           <p:confirm header="Remove"
                             message="Remove map?"
                             icon="pi pi-info-circle" />
          </p:commandButton>
        </div>
      </div>
    </div>
    <h:panelGroup id="editor_body" class="p-2 flex-grow-1 overflow-auto" layout="body">

      <p:messages id="geo_editor_msg" showSummary="true" styleClass="messages" 
                  rendered="#{not geoMapBean.isDialogVisible()}"
                  showIcon="true" closable="false" forIgnores="growl">
        <p:autoUpdate />
      </p:messages>

      <ui:insert name="body"></ui:insert>
    </h:panelGroup>
    
    <ui:include src="/pages/geo/map_import.xhtml" />

  </div>

  <gdm:saveBean value="geoMapBean" />
  <gdm:saveBean value="geoMapServicesBean" />
  <gdm:saveBean value="geoMapSourcesBean" />
  <gdm:saveBean value="geoMapLayersBean" />
  <gdm:saveBean value="geoMapLegendBean" />
  <gdm:saveBean value="geoMapLayerFormsBean" />
  <gdm:saveBean value="geoMapControlsBean" />
  <gdm:saveBean value="geoMapPrintReportsBean" />
  <gdm:saveBean value="geoMapRolesBean" />
  <gdm:saveState value="#{geoCatalogueBean.filter}" />
  <gdm:saveState value="#{geoCatalogueBean.currentMapView}" />

  <p:growl for="growl" life="1000">
    <p:autoUpdate />
  </p:growl>

  <script>
    // remove duplicates in detachedWidgets
    PrimeFaces.detachedWidgets = PrimeFaces.detachedWidgets.filter(
      (value, index) => PrimeFaces.detachedWidgets.indexOf(value) === index);

    function acLayerOnInput(widgetVar)
    {
      var value = PF(widgetVar).input.val();
      var index = value.lastIndexOf(",");
      value = index === -1 ? null : value.substring(0, index);
      window.acLayerValue = value;
    }
    
    function acLayerOnChange(widgetVar)
    {
      if (acLayerValue !== null)
      {
        var value = PF(widgetVar).input.val();
        PF(widgetVar).input.val(acLayerValue + "," + value);
        PF(widgetVar).hinput.val(acLayerValue + "," + value);
      }
    }
  
    function objectScrollUp()
    {
      var elem = document.getElementById("mainform:editor_body");
      if (elem) elem.scrollTop = 0;
    }
    window.history.pushState({}, '', '/go.faces?xmid=#{userSessionBean.selectedMenuItem.mid}');

    if (window.popStateListener)
    {
      window.removeEventListener("popstate", window.popStateListener);
    }

    window.popStateListener = () => {
      var pfButton = PrimeFaces.widgets["showCatalogueButton"];
      if (pfButton)
      {
        var id = pfButton.id;
        var button = document.getElementById(id);
        button.click();
      };
    };

    window.addEventListener("popstate", window.popStateListener);
    document.title = "#{geoMapBean.mapDocument.title == null ? geoMapBean.mapDocument.name : geoMapBean.mapDocument.title}";
  </script>

</ui:composition>