<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:gdm="http://gdmatrix.org/faces"
                xmlns:pe="http://primefaces.org/ui/extensions">
    
  <h:outputStylesheet library="css" name="geo.css" />
  
  <div class="flex flex-column h-full overflow-hidden">
    <div class="p-2 flex flex-grow-0 align-items-center border-none border-solid border-bottom-1"
         style="border-color:var(--surface-border)">
      <div class="flex-grow-0 align-items-center" style="color:var(--text-color)">
        <span class="pi pi-map"/>
        <strong>#{applicationBean.translate(geoMapBean.mapDocument.title, 'geo')}</strong>
      </div>      
      <div class="flex-grow-1 flex justify-content-end">
        <div class="ui-inputgroup">
          <p:commandButton action="#{geoMapBean.setView('catalogue')}" 
                           value="#{geoBundle.catalogue_short}" 
                           icon="pi pi-th-large" widgetVar="showCatalogueButton"
                           title="#{geoBundle.catalogue}" styleClass="mini"
                           rendered="#{geoMapBean.catalogueEnabled}"
                           process="@this" update="@form:cnt" />

          <p:commandButton action="#{geoMapBean.setView('map_editor')}" 
                           value="#{objectBundle.edit}" 
                           icon="pi pi-pencil" 
                           rendered="#{geoMapBean.isEditorUser()}"
                           title="#{objectBundle.edit}" styleClass="mini"
                           process="@this" update="@form:cnt" />

          <p:commandButton action="#{geoMapLayerFormsBean.refreshLayerForms()}"
                           value="#{geoBundle.refreshForms}"
                           icon="pi pi-refresh" 
                           rendered="#{geoMapBean.isEditorUser()}"
                           title="#{geoBundle.refreshForms}" styleClass="mini"
                           process="@this" update="@none" />
          
          <p:commandButton action="#{geoMapBean.setView('sld_editor')}" value="SLD" 
                           icon="pi pi-palette" rendered="#{geoMapBean.isEditorUser()}"
                           title="SLD" styleClass="mini"
                           process="@this" update="@form:cnt" />
        </div>
      </div>      
    </div>
    <gdm:maplibre value="#{geoMapBean.style}" 
                  encoder="#{geoMapBean.encoder}"
                  styleClass="flex-grow-1 h-full" />
  </div>

  <div id="map_info" style="display:none" aria-hidden="true">
    <h:outputText value="#{applicationBean.translateHtml(geoMapBean.mapDocument.mergedSummaryAndDescription, 'geo')}"
                  escape="false" />
  </div>
  
  <gdm:saveBean value="geoMapBean" />
  <gdm:saveBean value="geoSldBean" />
  <gdm:saveState value="#{geoCatalogueBean.filter}" />
  <gdm:saveState value="#{geoCatalogueBean.currentMapView}" />

  <p:growl id="growl" life="1000" for="growl">
    <p:autoUpdate />
  </p:growl>
  
  <script>
    // remove duplicates in detachedWidgets
    PrimeFaces.detachedWidgets = PrimeFaces.detachedWidgets.filter(
      (value, index) => PrimeFaces.detachedWidgets.indexOf(value) === index);
    
    document.title = "#{geoMapBean.mapDocument.title == null ? geoMapBean.mapDocument.name : geoMapBean.mapDocument.title}";  
    window.history.pushState({},document.title,'/go.faces?xmid=#{userSessionBean.selectedMenuItem.mid}&amp;map_name=#{geoMapBean.mapDocument.name}');

    if (window.popStateListener)
    {
      window.removeEventListener("popstate", window.popStateListener);
    }

    window.popStateListener = () => {
      var pfButton = PrimeFaces.widgets["showCatalogueButton"];
      if (pfButton)
      {
        var id = pfButton.id;
        var button = document.getElementById(id);
        button.click();
      };
    };

    window.addEventListener("popstate", window.popStateListener);
  </script>
  
</ui:composition>